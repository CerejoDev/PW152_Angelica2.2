; Listing generated by Microsoft (R) Optimizing Compiler Version 19.40.33813.0 

	TITLE	D:\pw152\Common\SpeedTreeRT\RT_DynamicLib\Debug VC 6.0\IdvRandom.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?m_bInit@SIdvRandomImpl@@2_NA			; SIdvRandomImpl::m_bInit
_BSS	SEGMENT
?m_bInit@SIdvRandomImpl@@2_NA DB 01H DUP (?)		; SIdvRandomImpl::m_bInit
_BSS	ENDS
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??0CIdvRandom@@QAE@XZ				; CIdvRandom::CIdvRandom
PUBLIC	??1CIdvRandom@@QAE@XZ				; CIdvRandom::~CIdvRandom
PUBLIC	?GetNormal@CIdvRandom@@QAENXZ			; CIdvRandom::GetNormal
PUBLIC	?GetNormal@CIdvRandom@@QAENNN@Z			; CIdvRandom::GetNormal
PUBLIC	?GetUniform@CIdvRandom@@QAEMMM@Z		; CIdvRandom::GetUniform
PUBLIC	?Reseed@CIdvRandom@@QAEXJ@Z			; CIdvRandom::Reseed
PUBLIC	?GetSeed@CIdvRandom@@QBEJXZ			; CIdvRandom::GetSeed
PUBLIC	??0ExtReal@@QAE@M@Z				; ExtReal::ExtReal
PUBLIC	??0Random@@QAE@XZ				; Random::Random
PUBLIC	??1Random@@UAE@XZ				; Random::~Random
PUBLIC	?Mean@Random@@UBE?AVExtReal@@XZ			; Random::Mean
PUBLIC	?Variance@Random@@UBE?AVExtReal@@XZ		; Random::Variance
PUBLIC	?nelems@Random@@UBEHXZ				; Random::nelems
PUBLIC	?tDelete@Random@@UAEXXZ				; Random::tDelete
PUBLIC	??_GRandom@@UAEPAXI@Z				; Random::`scalar deleting destructor'
PUBLIC	??0Uniform@@QAE@XZ				; Uniform::Uniform
PUBLIC	?Next@Uniform@@UAEMXZ				; Uniform::Next
PUBLIC	?Mean@Uniform@@UBE?AVExtReal@@XZ		; Uniform::Mean
PUBLIC	?Variance@Uniform@@UBE?AVExtReal@@XZ		; Uniform::Variance
PUBLIC	?Density@Uniform@@UBEMM@Z			; Uniform::Density
PUBLIC	??1Uniform@@UAE@XZ				; Uniform::~Uniform
PUBLIC	??_GUniform@@UAEPAXI@Z				; Uniform::`scalar deleting destructor'
PUBLIC	??_7Random@@6B@					; Random::`vftable'
PUBLIC	??_7Uniform@@6B@				; Uniform::`vftable'
PUBLIC	?m_cUniform@SIdvRandomImpl@@2VUniform@@A	; SIdvRandomImpl::m_cUniform
PUBLIC	?m_cNormal@SIdvRandomImpl@@2VNormal@@A		; SIdvRandomImpl::m_cNormal
PUBLIC	??_R4Random@@6B@				; Random::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRandom@@@8				; Random `RTTI Type Descriptor'
PUBLIC	??_R3Random@@8					; Random::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Random@@8					; Random::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Random@@8				; Random::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4Uniform@@6B@				; Uniform::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUniform@@@8				; Uniform `RTTI Type Descriptor'
PUBLIC	??_R3Uniform@@8					; Uniform::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Uniform@@8					; Uniform::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Uniform@@8			; Uniform::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@3daaaaab
PUBLIC	__real@3f000000
PUBLIC	__real@3f800000
PUBLIC	__real@4f000000
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	__imp___time64:PROC
EXTRN	?Set@Random@@SAXN@Z:PROC			; Random::Set
EXTRN	?SetLong@Random@@SAXJ@Z:PROC			; Random::SetLong
EXTRN	?GetSeed@Random@@SAJXZ:PROC			; Random::GetSeed
EXTRN	?Next@Random@@UAEMXZ:PROC			; Random::Next
EXTRN	?Name@Random@@UAEPADXZ:PROC			; Random::Name
EXTRN	?Density@Random@@UBEMM@Z:PROC			; Random::Density
EXTRN	?load@Random@@UAEXPAHPAMPAPAV1@@Z:PROC		; Random::load
EXTRN	??_ERandom@@UAEPAXI@Z:PROC			; Random::`vector deleting destructor'
EXTRN	?Name@Uniform@@UAEPADXZ:PROC			; Uniform::Name
EXTRN	??_EUniform@@UAEPAXI@Z:PROC			; Uniform::`vector deleting destructor'
EXTRN	?Next@SymGen@@UAEMXZ:PROC			; SymGen::Next
EXTRN	??0Normal@@QAE@XZ:PROC				; Normal::Normal
EXTRN	??1Normal@@UAE@XZ:PROC				; Normal::~Normal
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__ftol2_sse:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	__fltused:DWORD
_BSS	SEGMENT
	ALIGN	4

?m_cUniform@SIdvRandomImpl@@2VUniform@@A DD 01H DUP (?)	; SIdvRandomImpl::m_cUniform
?m_cNormal@SIdvRandomImpl@@2VNormal@@A DB 014H DUP (?)	; SIdvRandomImpl::m_cNormal
_BSS	ENDS
CRT$XCU	SEGMENT
??m_cUniform$initializer$@SIdvRandomImpl@@2P6AXXZA@@3P6AXXZA DD FLAT:??__E?m_cUniform@SIdvRandomImpl@@2VUniform@@A@@YAXXZ ; ??m_cUniform$initializer$@SIdvRandomImpl@@2P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT __real@4f000000
CONST	SEGMENT
__real@4f000000 DD 04f000000r			; 2.14748e+09
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3daaaaab
CONST	SEGMENT
__real@3daaaaab DD 03daaaaabr			; 0.0833333
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@Uniform@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Uniform@@8 DD FLAT:??_R0?AVUniform@@@8	; Uniform::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Uniform@@8
rdata$r	ENDS
;	COMDAT ??_R2Uniform@@8
rdata$r	SEGMENT
??_R2Uniform@@8 DD FLAT:??_R1A@?0A@EA@Uniform@@8	; Uniform::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Random@@8
rdata$r	ENDS
;	COMDAT ??_R3Uniform@@8
rdata$r	SEGMENT
??_R3Uniform@@8 DD 00H					; Uniform::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2Uniform@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUniform@@@8
data$rs	SEGMENT
??_R0?AVUniform@@@8 DD FLAT:??_7type_info@@6B@		; Uniform `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUniform@@', 00H
data$rs	ENDS
;	COMDAT ??_R4Uniform@@6B@
rdata$r	SEGMENT
??_R4Uniform@@6B@ DD 00H				; Uniform::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUniform@@@8
	DD	FLAT:??_R3Uniform@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Random@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Random@@8 DD FLAT:??_R0?AVRandom@@@8	; Random::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Random@@8
rdata$r	ENDS
;	COMDAT ??_R2Random@@8
rdata$r	SEGMENT
??_R2Random@@8 DD FLAT:??_R1A@?0A@EA@Random@@8		; Random::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3Random@@8
rdata$r	SEGMENT
??_R3Random@@8 DD 00H					; Random::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2Random@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRandom@@@8
data$rs	SEGMENT
??_R0?AVRandom@@@8 DD FLAT:??_7type_info@@6B@		; Random `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRandom@@', 00H
data$rs	ENDS
;	COMDAT ??_R4Random@@6B@
rdata$r	SEGMENT
??_R4Random@@6B@ DD 00H					; Random::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRandom@@@8
	DD	FLAT:??_R3Random@@8
rdata$r	ENDS
;	COMDAT ??_7Uniform@@6B@
CONST	SEGMENT
??_7Uniform@@6B@ DD FLAT:??_R4Uniform@@6B@		; Uniform::`vftable'
	DD	FLAT:??_EUniform@@UAEPAXI@Z
	DD	FLAT:?Next@Uniform@@UAEMXZ
	DD	FLAT:?Name@Uniform@@UAEPADXZ
	DD	FLAT:?Density@Uniform@@UBEMM@Z
	DD	FLAT:?Mean@Uniform@@UBE?AVExtReal@@XZ
	DD	FLAT:?Variance@Uniform@@UBE?AVExtReal@@XZ
	DD	FLAT:?nelems@Random@@UBEHXZ
	DD	FLAT:?tDelete@Random@@UAEXXZ
	DD	FLAT:?load@Random@@UAEXPAHPAMPAPAV1@@Z
CONST	ENDS
;	COMDAT ??_7Random@@6B@
CONST	SEGMENT
??_7Random@@6B@ DD FLAT:??_R4Random@@6B@		; Random::`vftable'
	DD	FLAT:??_ERandom@@UAEPAXI@Z
	DD	FLAT:?Next@Random@@UAEMXZ
	DD	FLAT:?Name@Random@@UAEPADXZ
	DD	FLAT:?Density@Random@@UBEMM@Z
	DD	FLAT:?Mean@Random@@UBE?AVExtReal@@XZ
	DD	FLAT:?Variance@Random@@UBE?AVExtReal@@XZ
	DD	FLAT:?nelems@Random@@UBEHXZ
	DD	FLAT:?tDelete@Random@@UAEXXZ
	DD	FLAT:?load@Random@@UAEXPAHPAMPAPAV1@@Z
CONST	ENDS
CRT$XCU	SEGMENT
??m_cNormal$initializer$@SIdvRandomImpl@@2P6AXXZA@@3P6AXXZA DD FLAT:??__E?m_cNormal@SIdvRandomImpl@@2VNormal@@A@@YAXXZ ; ??m_cNormal$initializer$@SIdvRandomImpl@@2P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__F?m_cNormal@SIdvRandomImpl@@2VNormal@@A@@YAXXZ
text$yd	SEGMENT
??__F?m_cNormal@SIdvRandomImpl@@2VNormal@@A@@YAXXZ PROC	; `dynamic atexit destructor for 'SIdvRandomImpl::m_cNormal'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	mov	edi, ebp
	xor	ecx, ecx
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET ?m_cNormal@SIdvRandomImpl@@2VNormal@@A ; SIdvRandomImpl::m_cNormal
	call	??1Normal@@UAE@XZ			; Normal::~Normal
	npad	1
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__F?m_cNormal@SIdvRandomImpl@@2VNormal@@A@@YAXXZ ENDP	; `dynamic atexit destructor for 'SIdvRandomImpl::m_cNormal''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\pw152\Common\SpeedTreeRT\SourceCode\LibRandom_Source\IdvRandom.cpp
;	COMDAT ??__E?m_cNormal@SIdvRandomImpl@@2VNormal@@A@@YAXXZ
text$di	SEGMENT
??__E?m_cNormal@SIdvRandomImpl@@2VNormal@@A@@YAXXZ PROC	; `dynamic initializer for 'SIdvRandomImpl::m_cNormal'', COMDAT

; 49   : Normal SIdvRandomImpl::m_cNormal;

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	mov	edi, ebp
	xor	ecx, ecx
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET ?m_cNormal@SIdvRandomImpl@@2VNormal@@A ; SIdvRandomImpl::m_cNormal
	call	??0Normal@@QAE@XZ			; Normal::Normal
	npad	1
	push	OFFSET ??__F?m_cNormal@SIdvRandomImpl@@2VNormal@@A@@YAXXZ ; `dynamic atexit destructor for 'SIdvRandomImpl::m_cNormal''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__E?m_cNormal@SIdvRandomImpl@@2VNormal@@A@@YAXXZ ENDP	; `dynamic initializer for 'SIdvRandomImpl::m_cNormal''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__F?m_cUniform@SIdvRandomImpl@@2VUniform@@A@@YAXXZ
text$yd	SEGMENT
??__F?m_cUniform@SIdvRandomImpl@@2VUniform@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'SIdvRandomImpl::m_cUniform'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	mov	edi, ebp
	xor	ecx, ecx
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET ?m_cUniform@SIdvRandomImpl@@2VUniform@@A ; SIdvRandomImpl::m_cUniform
	call	??1Uniform@@UAE@XZ
	npad	1
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__F?m_cUniform@SIdvRandomImpl@@2VUniform@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'SIdvRandomImpl::m_cUniform''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\pw152\Common\SpeedTreeRT\SourceCode\LibRandom_Source\IdvRandom.cpp
;	COMDAT ??__E?m_cUniform@SIdvRandomImpl@@2VUniform@@A@@YAXXZ
text$di	SEGMENT
??__E?m_cUniform@SIdvRandomImpl@@2VUniform@@A@@YAXXZ PROC ; `dynamic initializer for 'SIdvRandomImpl::m_cUniform'', COMDAT

; 48   : Uniform SIdvRandomImpl::m_cUniform;

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	mov	edi, ebp
	xor	ecx, ecx
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET ?m_cUniform@SIdvRandomImpl@@2VUniform@@A ; SIdvRandomImpl::m_cUniform
	call	??0Uniform@@QAE@XZ			; Uniform::Uniform
	npad	1
	push	OFFSET ??__F?m_cUniform@SIdvRandomImpl@@2VUniform@@A@@YAXXZ ; `dynamic atexit destructor for 'SIdvRandomImpl::m_cUniform''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__E?m_cUniform@SIdvRandomImpl@@2VUniform@@A@@YAXXZ ENDP ; `dynamic initializer for 'SIdvRandomImpl::m_cUniform''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUniform@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUniform@@UAEPAXI@Z PROC				; Uniform::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Uniform@@UAE@XZ
	npad	1
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUniform@@UAEPAXI@Z ENDP				; Uniform::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1Uniform@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1Uniform@@UAE@XZ PROC					; Uniform::~Uniform, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Random@@UAE@XZ			; Random::~Random
	npad	1
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1Uniform@@UAE@XZ ENDP					; Uniform::~Uniform
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\pw152\Common\SpeedTreeRT\SourceCode\LibRandom_Source\RobertDavies_Random.h
;	COMDAT ?Density@Uniform@@UBEMM@Z
_TEXT	SEGMENT
tv66 = -208						; size = 4
_this$ = -8						; size = 4
_x$ = 8							; size = 4
?Density@Uniform@@UBEMM@Z PROC				; Uniform::Density, COMDAT
; _this$ = ecx

; 83   :         Real            Density(Real x) const   { return (x < 0.0f || x > 1.0f) ? 0.0f : 1.0f; }

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	xorps	xmm0, xmm0
	comiss	xmm0, DWORD PTR _x$[ebp]
	ja	SHORT $LN3@Density
	movss	xmm0, DWORD PTR _x$[ebp]
	comiss	xmm0, DWORD PTR __real@3f800000
	ja	SHORT $LN3@Density
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR tv66[ebp], xmm0
	jmp	SHORT $LN4@Density
$LN3@Density:
	xorps	xmm0, xmm0
	movss	DWORD PTR tv66[ebp], xmm0
$LN4@Density:
	fld	DWORD PTR tv66[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Density@Uniform@@UBEMM@Z ENDP				; Uniform::Density
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\pw152\Common\SpeedTreeRT\SourceCode\LibRandom_Source\RobertDavies_Random.h
;	COMDAT ?Variance@Uniform@@UBE?AVExtReal@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Variance@Uniform@@UBE?AVExtReal@@XZ PROC		; Uniform::Variance, COMDAT
; _this$ = ecx

; 82   :         ExtReal         Variance( ) const       { return 1.0f / 12.0f; }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	movss	xmm0, DWORD PTR __real@3daaaaab
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0ExtReal@@QAE@M@Z			; ExtReal::ExtReal
	npad	1
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Variance@Uniform@@UBE?AVExtReal@@XZ ENDP		; Uniform::Variance
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\pw152\Common\SpeedTreeRT\SourceCode\LibRandom_Source\RobertDavies_Random.h
;	COMDAT ?Mean@Uniform@@UBE?AVExtReal@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Mean@Uniform@@UBE?AVExtReal@@XZ PROC			; Uniform::Mean, COMDAT
; _this$ = ecx

; 81   :         ExtReal         Mean( ) const           { return 0.5f; }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0ExtReal@@QAE@M@Z			; ExtReal::ExtReal
	npad	1
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Mean@Uniform@@UBE?AVExtReal@@XZ ENDP			; Uniform::Mean
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\pw152\Common\SpeedTreeRT\SourceCode\LibRandom_Source\RobertDavies_Random.h
;	COMDAT ?Next@Uniform@@UAEMXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Next@Uniform@@UAEMXZ PROC				; Uniform::Next, COMDAT
; _this$ = ecx

; 80   :         Real            Next( )                 { return Random::Next(); }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Next@Random@@UAEMXZ			; Random::Next
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Next@Uniform@@UAEMXZ ENDP				; Uniform::Next
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\pw152\Common\SpeedTreeRT\SourceCode\LibRandom_Source\RobertDavies_Random.h
;	COMDAT ??0Uniform@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0Uniform@@QAE@XZ PROC					; Uniform::Uniform, COMDAT
; _this$ = ecx

; 77   :         Uniform( ) { }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Random@@QAE@XZ			; Random::Random
	npad	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Uniform@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0Uniform@@QAE@XZ ENDP					; Uniform::Uniform
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GRandom@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GRandom@@UAEPAXI@Z PROC				; Random::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Random@@UAE@XZ			; Random::~Random
	npad	1
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRandom@@UAEPAXI@Z ENDP				; Random::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\pw152\Common\SpeedTreeRT\SourceCode\LibRandom_Source\RobertDavies_Random.h
;	COMDAT ?tDelete@Random@@UAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?tDelete@Random@@UAEXXZ PROC				; Random::tDelete, COMDAT
; _this$ = ecx

; 59   : virtual void            tDelete( ) { }          // delete components of sum

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?tDelete@Random@@UAEXXZ ENDP				; Random::tDelete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\pw152\Common\SpeedTreeRT\SourceCode\LibRandom_Source\RobertDavies_Random.h
;	COMDAT ?nelems@Random@@UBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?nelems@Random@@UBEHXZ PROC				; Random::nelems, COMDAT
; _this$ = ecx

; 58   : virtual int             nelems( ) const     { return 1; }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, 1
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?nelems@Random@@UBEHXZ ENDP				; Random::nelems
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\pw152\Common\SpeedTreeRT\SourceCode\LibRandom_Source\RobertDavies_Random.h
;	COMDAT ?Variance@Random@@UBE?AVExtReal@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Variance@Random@@UBE?AVExtReal@@XZ PROC		; Random::Variance, COMDAT
; _this$ = ecx

; 57   : virtual ExtReal         Variance( ) const   { return 1.0f / 12.0f; }    // variance of distribution

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	movss	xmm0, DWORD PTR __real@3daaaaab
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0ExtReal@@QAE@M@Z			; ExtReal::ExtReal
	npad	1
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Variance@Random@@UBE?AVExtReal@@XZ ENDP		; Random::Variance
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\pw152\Common\SpeedTreeRT\SourceCode\LibRandom_Source\RobertDavies_Random.h
;	COMDAT ?Mean@Random@@UBE?AVExtReal@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Mean@Random@@UBE?AVExtReal@@XZ PROC			; Random::Mean, COMDAT
; _this$ = ecx

; 56   : virtual ExtReal         Mean( ) const       { return 0.5f; }            // mean of distribution

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0ExtReal@@QAE@M@Z			; ExtReal::ExtReal
	npad	1
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Mean@Random@@UBE?AVExtReal@@XZ ENDP			; Random::Mean
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\pw152\Common\SpeedTreeRT\SourceCode\LibRandom_Source\RobertDavies_Random.h
;	COMDAT ??1Random@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1Random@@UAE@XZ PROC					; Random::~Random, COMDAT
; _this$ = ecx

; 47   : virtual ~Random() { }                           // make destructors virtual

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Random@@6B@
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1Random@@UAE@XZ ENDP					; Random::~Random
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\pw152\Common\SpeedTreeRT\SourceCode\LibRandom_Source\RobertDavies_Random.h
;	COMDAT ??0Random@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0Random@@QAE@XZ PROC					; Random::Random, COMDAT
; _this$ = ecx

; 46   :         Random() { }                            // do nothing

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Random@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0Random@@QAE@XZ ENDP					; Random::Random
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\pw152\Common\SpeedTreeRT\SourceCode\LibRandom_Source\ExtendedReal.h
;	COMDAT ??0ExtReal@@QAE@M@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_v$ = 8							; size = 4
??0ExtReal@@QAE@M@Z PROC				; ExtReal::ExtReal, COMDAT
; _this$ = ecx

; 42   :         ExtReal(Real v)                     { c = Finite; value = v; }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _v$[ebp]
	movss	DWORD PTR [eax], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0ExtReal@@QAE@M@Z ENDP				; ExtReal::ExtReal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\time.h
;	COMDAT _time
_TEXT	SEGMENT
__Time$ = 8						; size = 4
_time	PROC						; COMDAT

; 551  :         {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	mov	edi, ebp
	xor	ecx, ecx
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 552  :             return _time64(_Time);

	mov	esi, esp
	mov	eax, DWORD PTR __Time$[ebp]
	push	eax
	call	DWORD PTR __imp___time64
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 553  :         }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_time	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\pw152\Common\SpeedTreeRT\SourceCode\LibRandom_Source\IdvRandom.cpp
;	COMDAT ?GetSeed@CIdvRandom@@QBEJXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetSeed@CIdvRandom@@QBEJXZ PROC			; CIdvRandom::GetSeed, COMDAT
; _this$ = ecx

; 141  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 142  :     return Random::GetSeed( );

	call	?GetSeed@Random@@SAJXZ			; Random::GetSeed

; 143  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetSeed@CIdvRandom@@QBEJXZ ENDP			; CIdvRandom::GetSeed
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\pw152\Common\SpeedTreeRT\SourceCode\LibRandom_Source\IdvRandom.cpp
;	COMDAT ?Reseed@CIdvRandom@@QAEXJ@Z
_TEXT	SEGMENT
_nTimeValue$1 = -32					; size = 4
_nNewSeed$2 = -20					; size = 4
_this$ = -8						; size = 4
_lSeed$ = 8						; size = 4
?Reseed@CIdvRandom@@QAEXJ@Z PROC			; CIdvRandom::Reseed, COMDAT
; _this$ = ecx

; 112  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-36]
	mov	ecx, 9
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 113  :     if (lSeed == -1L) // automatically calc a seed

	cmp	DWORD PTR _lSeed$[ebp], -1
	jne	$LN2@Reseed

; 114  :     {
; 115  :         long nNewSeed = 12345L;

	mov	DWORD PTR _nNewSeed$2[ebp], 12345	; 00003039H

; 116  :         if (SIdvRandomImpl::m_bInit)

	movzx	eax, BYTE PTR ?m_bInit@SIdvRandomImpl@@2_NA ; SIdvRandomImpl::m_bInit
	test	eax, eax
	je	SHORT $LN4@Reseed

; 117  :             nNewSeed = static_cast<long>(GetUniform(0.0f, float(INT_MAX)));

	push	ecx
	movss	xmm0, DWORD PTR __real@4f000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	xorps	xmm0, xmm0
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetUniform@CIdvRandom@@QAEMMM@Z	; CIdvRandom::GetUniform
	call	__ftol2_sse
	mov	DWORD PTR _nNewSeed$2[ebp], eax
$LN4@Reseed:

; 118  :         long nTimeValue = static_cast<long>(time((time_t* ) 0));

	push	0
	call	_time
	add	esp, 4
	mov	DWORD PTR _nTimeValue$1[ebp], eax

; 119  : //        srand(nNewSeed);
; 120  :         if (nNewSeed > nTimeValue)

	mov	eax, DWORD PTR _nNewSeed$2[ebp]
	cmp	eax, DWORD PTR _nTimeValue$1[ebp]
	jle	SHORT $LN5@Reseed

; 121  :             Random::Set(double(nTimeValue) / nNewSeed);

	cvtsi2sd xmm0, DWORD PTR _nTimeValue$1[ebp]
	cvtsi2sd xmm1, DWORD PTR _nNewSeed$2[ebp]
	divsd	xmm0, xmm1
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	call	?Set@Random@@SAXN@Z			; Random::Set
	add	esp, 8
	jmp	SHORT $LN6@Reseed
$LN5@Reseed:

; 122  :         else
; 123  :             Random::Set(double(nNewSeed) / nTimeValue);

	cvtsi2sd xmm0, DWORD PTR _nNewSeed$2[ebp]
	cvtsi2sd xmm1, DWORD PTR _nTimeValue$1[ebp]
	divsd	xmm0, xmm1
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	call	?Set@Random@@SAXN@Z			; Random::Set
	add	esp, 8
$LN6@Reseed:

; 124  :     }

	jmp	SHORT $LN3@Reseed
$LN2@Reseed:

; 125  :     else
; 126  :     {
; 127  :         if (lSeed <= 1L)

	cmp	DWORD PTR _lSeed$[ebp], 1
	jg	SHORT $LN7@Reseed

; 128  :             lSeed = 1L;

	mov	DWORD PTR _lSeed$[ebp], 1
$LN7@Reseed:

; 129  :         Random::SetLong(lSeed);

	mov	eax, DWORD PTR _lSeed$[ebp]
	push	eax
	call	?SetLong@Random@@SAXJ@Z			; Random::SetLong
	add	esp, 4
$LN3@Reseed:

; 130  :     }
; 131  : 
; 132  :     SIdvRandomImpl::m_bInit = true;

	mov	BYTE PTR ?m_bInit@SIdvRandomImpl@@2_NA, 1 ; SIdvRandomImpl::m_bInit

; 133  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Reseed@CIdvRandom@@QAEXJ@Z ENDP			; CIdvRandom::Reseed
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\pw152\Common\SpeedTreeRT\SourceCode\LibRandom_Source\IdvRandom.cpp
;	COMDAT ?GetUniform@CIdvRandom@@QAEMMM@Z
_TEXT	SEGMENT
tv77 = -216						; size = 4
tv74 = -212						; size = 4
tv81 = -208						; size = 4
_this$ = -8						; size = 4
_fMin$ = 8						; size = 4
_fMax$ = 12						; size = 4
?GetUniform@CIdvRandom@@QAEMMM@Z PROC			; CIdvRandom::GetUniform, COMDAT
; _this$ = ecx

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-24]
	mov	ecx, 6
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 79   :     return fMin + (fMax - fMin) * static_cast<float>(SIdvRandomImpl::m_cUniform.Next( ));

	movss	xmm0, DWORD PTR _fMax$[ebp]
	subss	xmm0, DWORD PTR _fMin$[ebp]
	mov	ecx, OFFSET ?m_cUniform@SIdvRandomImpl@@2VUniform@@A ; SIdvRandomImpl::m_cUniform
	movss	DWORD PTR tv81[ebp], xmm0
	call	?Next@Uniform@@UAEMXZ			; Uniform::Next
	fstp	DWORD PTR tv74[ebp]
	movss	xmm0, DWORD PTR tv81[ebp]
	mulss	xmm0, DWORD PTR tv74[ebp]
	addss	xmm0, DWORD PTR _fMin$[ebp]
	movss	DWORD PTR tv77[ebp], xmm0
	fld	DWORD PTR tv77[ebp]

; 80   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetUniform@CIdvRandom@@QAEMMM@Z ENDP			; CIdvRandom::GetUniform
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\pw152\Common\SpeedTreeRT\SourceCode\LibRandom_Source\IdvRandom.cpp
;	COMDAT ?GetNormal@CIdvRandom@@QAENNN@Z
_TEXT	SEGMENT
_dValue$ = -24						; size = 8
_this$ = -8						; size = 4
_dMin$ = 8						; size = 8
_dMax$ = 16						; size = 8
?GetNormal@CIdvRandom@@QAENNN@Z PROC			; CIdvRandom::GetNormal, COMDAT
; _this$ = ecx

; 98   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-28]
	mov	ecx, 7
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 99   :     double dValue = SIdvRandomImpl::m_cNormal.Next( );

	mov	ecx, OFFSET ?m_cNormal@SIdvRandomImpl@@2VNormal@@A ; SIdvRandomImpl::m_cNormal
	call	?Next@SymGen@@UAEMXZ			; SymGen::Next
	fstp	QWORD PTR _dValue$[ebp]
$LN2@GetNormal:

; 100  :     while (dValue < dMin ||

	movsd	xmm0, QWORD PTR _dMin$[ebp]
	comisd	xmm0, QWORD PTR _dValue$[ebp]
	ja	SHORT $LN4@GetNormal
	movsd	xmm0, QWORD PTR _dValue$[ebp]
	comisd	xmm0, QWORD PTR _dMax$[ebp]
	jbe	SHORT $LN3@GetNormal
$LN4@GetNormal:

; 101  :            dValue > dMax)
; 102  :         dValue = SIdvRandomImpl::m_cNormal.Next( );

	mov	ecx, OFFSET ?m_cNormal@SIdvRandomImpl@@2VNormal@@A ; SIdvRandomImpl::m_cNormal
	call	?Next@SymGen@@UAEMXZ			; SymGen::Next
	fstp	QWORD PTR _dValue$[ebp]
	jmp	SHORT $LN2@GetNormal
$LN3@GetNormal:

; 103  : 
; 104  :     return dValue;

	fld	QWORD PTR _dValue$[ebp]

; 105  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?GetNormal@CIdvRandom@@QAENNN@Z ENDP			; CIdvRandom::GetNormal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\pw152\Common\SpeedTreeRT\SourceCode\LibRandom_Source\IdvRandom.cpp
;	COMDAT ?GetNormal@CIdvRandom@@QAENXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetNormal@CIdvRandom@@QAENXZ PROC			; CIdvRandom::GetNormal, COMDAT
; _this$ = ecx

; 88   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 89   :     return SIdvRandomImpl::m_cNormal.Next( );

	mov	ecx, OFFSET ?m_cNormal@SIdvRandomImpl@@2VNormal@@A ; SIdvRandomImpl::m_cNormal
	call	?Next@SymGen@@UAEMXZ			; SymGen::Next

; 90   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetNormal@CIdvRandom@@QAENXZ ENDP			; CIdvRandom::GetNormal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\pw152\Common\SpeedTreeRT\SourceCode\LibRandom_Source\IdvRandom.cpp
;	COMDAT ??1CIdvRandom@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CIdvRandom@@QAE@XZ PROC				; CIdvRandom::~CIdvRandom, COMDAT
; _this$ = ecx

; 69   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 70   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1CIdvRandom@@QAE@XZ ENDP				; CIdvRandom::~CIdvRandom
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\pw152\Common\SpeedTreeRT\SourceCode\LibRandom_Source\IdvRandom.cpp
;	COMDAT ??0CIdvRandom@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0CIdvRandom@@QAE@XZ PROC				; CIdvRandom::CIdvRandom, COMDAT
; _this$ = ecx

; 58   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 59   :     if (!SIdvRandomImpl::m_bInit)

	movzx	eax, BYTE PTR ?m_bInit@SIdvRandomImpl@@2_NA ; SIdvRandomImpl::m_bInit
	test	eax, eax
	jne	SHORT $LN2@CIdvRandom

; 60   :         Reseed( );

	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Reseed@CIdvRandom@@QAEXJ@Z		; CIdvRandom::Reseed
	npad	1
$LN2@CIdvRandom:

; 61   : }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CIdvRandom@@QAE@XZ ENDP				; CIdvRandom::CIdvRandom
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\pw152\Common\SpeedTreeRT\SourceCode\LibRandom_Source\IdvRandom.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\pw152\Common\SpeedTreeRT\SourceCode\LibRandom_Source\IdvRandom.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
